/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useAnimations, useFBX, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useControls } from "leva";
import React, { useEffect, useRef } from "react";
import * as THREE from "three";

export function Avatar(props) {
  const { animation, wireframe } = props;
  const { headFollow, cursorFollow } = useControls({
    headFollow: false,
    cursorFollow: false,
    wireframe: false,
  });
  const group = useRef();
  const { nodes, materials } = useGLTF("models/busterBrown.glb");

  // const { animations: typingAnimation } = useFBX("animations/Typing.fbx");
  const { animations: hipHopDancingAnimation } = useFBX("animations/Hip Hop Dancing.fbx");
  
  const { animations: sittingAnimation } = useFBX(
    "animations/Sitting Idle.fbx"
  );
  const { animations: fallingAnimation } = useFBX(
    "animations/Floating.fbx"
  );
  // const { animations: pointingAnimation } = useFBX(
  //   "animations/Pointing.fbx"
  // );
  hipHopDancingAnimation[0].name = "Hip Hop Dancing";
  sittingAnimation[0].name = "Sitting";
  fallingAnimation[0].name = "Falling";

  // pointingAnimation[0].name = "Pointing";

  const { actions } = useAnimations(
    [hipHopDancingAnimation[0], sittingAnimation[0], fallingAnimation[0],
  ]
    ,
    group
  );

  useFrame((state) => {
    if (headFollow) {
      group.current.getObjectByName("Head").lookAt(state.camera.position);
    }
    if (cursorFollow) {
      const target = new THREE.Vector3(state.mouse.x, state.mouse.y, 1);
      group.current.getObjectByName("Spine2").lookAt(target);
    }
  });

  useEffect(() => {
    if (!actions[animation]) {
      // Return early if the specified animation is not available in actions
      return;
    }
  
    actions[animation].reset().fadeIn(0.5).play();
    return () => {
      actions[animation].reset().fadeOut(0.5);
    };
  }, [animation]);

  useEffect(() => {
    Object.values(materials).forEach((material) => {
      material.wireframe = wireframe;
    });
  }, [wireframe]);

  return (
  <group {...props} ref={group} dispose={null}>
    <group>
      <primitive object={nodes.Hips} />
      <skinnedMesh frustumCulled={false} geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
      <skinnedMesh frustumCulled={false} geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh frustumCulled={false} geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh frustumCulled={false} geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh frustumCulled={false} geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
      <skinnedMesh frustumCulled={false} name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh frustumCulled={false} name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh frustumCulled={false} name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      <skinnedMesh frustumCulled={false} name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
    </group>
  </group>

    // <group {...props} ref={group} dispose={null}>
    //   <group>
    //     <primitive object={nodes.Hips} />
    //     <skinnedMesh
    //       geometry={nodes.Wolf3D_Body.geometry}
    //       material={materials.Wolf3D_Body}
    //       skeleton={nodes.Wolf3D_Body.skeleton}
    //     />
    //     <skinnedMesh
    //       geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
    //       material={materials.Wolf3D_Outfit_Bottom}
    //       skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
    //     />
    //     <skinnedMesh
    //       geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
    //       material={materials.Wolf3D_Outfit_Footwear}
    //       skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
    //     />
    //     <skinnedMesh
    //       geometry={nodes.Wolf3D_Outfit_Top.geometry}
    //       material={materials.Wolf3D_Outfit_Top}
    //       skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
    //     />
    //     <skinnedMesh
    //       geometry={nodes.Wolf3D_Hair.geometry}
    //       material={materials.Wolf3D_Hair}
    //       skeleton={nodes.Wolf3D_Hair.skeleton}
    //     />
    //     <skinnedMesh
    //       name="EyeLeft"
    //       geometry={nodes.EyeLeft.geometry}
    //       material={materials.Wolf3D_Eye}
    //       skeleton={nodes.EyeLeft.skeleton}
    //       morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
    //       morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
    //     />
    //     <skinnedMesh
    //       name="EyeRight"
    //       geometry={nodes.EyeRight.geometry}
    //       material={materials.Wolf3D_Eye}
    //       skeleton={nodes.EyeRight.skeleton}
    //       morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
    //       morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
    //     />
    //     <skinnedMesh
    //       name="Wolf3D_Head"
    //       geometry={nodes.Wolf3D_Head.geometry}
    //       material={materials.Wolf3D_Skin}
    //       skeleton={nodes.Wolf3D_Head.skeleton}
    //       morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
    //       morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
    //     />
    //     <skinnedMesh
    //       name="Wolf3D_Teeth"
    //       geometry={nodes.Wolf3D_Teeth.geometry}
    //       material={materials.Wolf3D_Teeth}
    //       skeleton={nodes.Wolf3D_Teeth.skeleton}
    //       morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
    //       morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
    //     />
    //   </group>
    // </group>
  );
}

useGLTF.preload("models/busterBrown.glb");
useFBX.preload("animations/Hip Hop Dancing.fbx");
useFBX.preload("animations/Floating.fbx");
useFBX.preload("animations/Sitting Idle.fbx");